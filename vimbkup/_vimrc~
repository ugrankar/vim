set nocompatible
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin
"Uncomment below if gnudiff is not being used.
"Uncomment below if gnudiff is not being used.
"set diffexpr=MyDiff()
"function MyDiff()
"  let opt = '-a --binary '
"  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
"  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
"  let arg1 = v:fname_in
"  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
"  let arg2 = v:fname_new
"  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
"  let arg3 = v:fname_out
"  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
"  let eq = ''
"  if $VIMRUNTIME =~ ' '
"    if &sh =~ 'cmd'
"      let cmd = '""' . $VIMRUNTIME . '\diff"'
"      let eq = '"'
"    else
"      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
"    endif
"  else
"    let cmd = $VIMRUNTIME . '\diff'
"  endif
"  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq
"endfunction
"Uncomment above if gnudiff is not being used.
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Personal Settings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Make vim not compatible with Vi
set nocompatible

"source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin

"Filetype and pathogen settings
syntax on
filetype plugin indent on
set nu
set hidden
set ignorecase
set incsearch
set smartcase
set showmatch
set autoindent
set smartindent
set ruler
set vb
set noerrorbells
set showmode 
set showcmd
set mouse=a
set history=1000
set undolevels=1000
set wildmenu
set backspace=2
set backspace=indent,eol,start
set autochdir
"important settings for line wrapping
"do not remove these two lines below.
set textwidth=170
set formatoptions-=t
"important settings for line wrapping
"do not remove these two lines above.

"NEVER EVER SET nowrap. It will mess things up.
"

"Damian Conway's plugins - does not seem to work with Centos (7.2) vim.
"Make the color column visible only when the line actually crosses over.
"Keep mum otherwise.
set colorcolumn=0
call matchadd('ColorColumn', '\%81v', 100)

"set encodings
set encoding=utf-8
set fileencoding=utf-8
set termencoding=utf-8
scriptencoding utf-8

"------------------
"Personal Mappings
let mapleader = "-"
let localmapleader = "\\" 
"Move lines down
nnoremap <leader> ddp
"Move lines up
nnoremap _ ddkP
inoremap jk <esc>
"------------------
iabbrev recieve receive
iabbrev percieve perceive
iabbrev clariion CLARiiON
iabbrev vmax Symmetrix VMAX
iabbrev serail Serial No:

"Set swap, backup and undo directories.
"NOTE - You have to create these yourself. Vim will NOT create them automatically.
"Set swapfiles directory
set directory=%HOMEPATH%\\vim\\vimswap//

"Set backup files directory
set backupdir=%HOMEPATH%\\vim\\vimbkup//

"Set undo directory
set undodir=%HOMEPATH%\\vim\\vimundo//

"Set listchars for a few things
set listchars=tab:>>

"Set command to clear registers.
function! ClearRegisters()
	let regs='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789/-="*+'
	let i=0
	while (i<strlen(regs))
		exec 'let @'.regs[i].'=""'
		let i=i+1
	endwhile
endfunction
"end of function to clear registers
command! ClearRegisters call ClearRegisters()
"Set $ to appear when you choose cw etc.
set cpoptions+=$

"Set Virtual Edit 
"This lets you move around a lot better.
"set virtualedit=all 

"Following key map shows/removes search match highlight when <F3> is pressed.
nnoremap <F3> :set hlsearch!<CR>

nnoremap <F8> :NeoComplCacheEnable<CR>

"Search visually selected text"
" Search for selected text, forwards or backwards.
vnoremap <silent> * :<C-U>
			\let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
			\gvy/<C-R><C-R>=substitute(
			\escape(@", '/\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
			\gV:call setreg('"', old_reg, old_regtype)<CR>
vnoremap <silent> # :<C-U>
			\let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
			\gvy?<C-R><C-R>=substitute(
			\escape(@", '?\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
			\gV:call setreg('"', old_reg, old_regtype)<CR>    


"Painful setting forcing you to use h j k l only in NORMAL Mode"
no <Down> <Nop>
no <Up> <Nop>
no <left> <Nop>
no <Right> <Nop>

"Painful settings disabling the arrow keys in INSERT mode" 
ino <Down> <Nop>
ino <Up> <Nop>
ino <left> <Nop>
ino <Right> <Nop>
"Disable Menu, Scroll and Title Bar
"set guioptions=M
"set guioptions-=T
set guioptions-=r

"Colorschemes/status lines etc.
set t_Co=512
set background=light
colorscheme default
set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")}
set guifont=Consolas:h11
set laststatus=2
